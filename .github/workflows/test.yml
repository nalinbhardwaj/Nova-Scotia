name: Tests
on: [push, pull_request]
env:
  NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
  NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
jobs:
  check-toy-example-bn254:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: iden3/circom
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      - uses: actions-rs/cargo@v1
        with:
          command: install
          args: --path circom
      - run: sudo apt-get install -y nlohmann-json3-dev nasm
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "16"
      - run: bash ./examples/toy/compile.sh
      - run: cargo run --release --example toy_bn254
  check-toy-example-pasta:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: iden3/circom
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      - uses: actions-rs/cargo@v1
        with:
          command: install
          args: --path circom
      - run: sudo apt-get install -y nlohmann-json3-dev nasm
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "16"
      - run: bash ./examples/toy/compile.sh
      - run: cargo run --release --example toy_pasta
  check-toy-example-browser:
    runs-on: ubuntu-latest
    steps:
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2022-12-12
      - run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      - uses: actions/checkout@v3
      - run: rustup component add rust-src --toolchain nightly-2022-12-12-x86_64-unknown-linux-gnu
      - run: cd browser-test && wasm-pack build --target web --out-dir test-client/public/pkg
      - run: cd browser-test/test-client && yarn install && CI=false yarn build
